/*! For license information please see db.min.js.LICENSE.txt */
!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var s=t();for(var r in s)("object"==typeof exports?exports:e)[r]=s[r]}}(self,(function(){return(()=>{"use strict";var e={d:(t,s)=>{for(var r in s)e.o(s,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:s[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)},t={};e.d(t,{default:()=>C});const s="equal",r="startsWith",o="greaterThan",n="greaterThanOrEqual",i="lesserThan",a="lesserThanOrEqual",l="between";class u{constructor(e,t,s){this.type=e,this.value=t,s&&(this.index=s.name)}}const c="openCursor",h="delete",y="readwrite",m="readonly";class d{constructor(e,t,s,r,o,n,i,a,l){this._=e,this.sKey=Symbol.for("key"),this.access=t,this.index=s,this.action=r,this[this.sKey]=o,this.values=n,this.columns=i,this.limit=a,this.start=l}set[Symbol.for("key")](e){if(e){if("string"!=typeof e&&"number"!=typeof e)throw new Error(e+" should be of type string | number only");this.key=e}}objectStore(e){if(!e)throw new Error("Store is not defined");let t=this._.transaction([e],this.access);t.oncomplete=function(e){},t.onerror=function(e){};let s=t.objectStore(e);return this.index&&("string"==typeof this.index||"number"==typeof this.index?s=s.index(this.index):reject("Only one key is alowed in update")),s}check(e){if("add"===this.action){if(!e.autoIncrement&&!this.values[e.keyPath])return this.error=e.keyPath+" is not defined in "+e.name,!1;e.columns.forEach((t=>{if(!1===t.nullable&&!this.values[t.name])return this.error=t.name+" is not defined in "+e.name,!1}))}else this.action===c&&this.newValues;return!0}setFilter(e){if(e&&e.type)switch(this.index=e.index,e.type){case s:this.values=P[Symbol.for("IDBKeyRange")]().only(e.value);break;case r:this.values=P[Symbol.for("IDBKeyRange")]().bound(e.value,e.value+"ï¿¿");break;case o:this.values=P[Symbol.for("IDBKeyRange")]().lowerBound(e.value,!0);break;case i:this.values=P[Symbol.for("IDBKeyRange")]().upperBound(e.value,!0);break;case n:this.values=P[Symbol.for("IDBKeyRange")]().lowerBound(e.value,!1);break;case a:this.values=P[Symbol.for("IDBKeyRange")]().upperBound(e.value,!1);break;case l:let t=e.value.split("~");this.values=P[Symbol.for("IDBKeyRange")]().bound(Number(t[0]),Number(t[1]));break;default:this.index=void 0,this.filter=e,this.action=c}}}class b extends d{constructor(e,t){super(e,y,void 0,"add",void 0,t)}}class f extends d{constructor(e){super(e,y,void 0,"clear")}}class w extends d{constructor(e){super(e,m,void 0,"count")}}class S extends d{constructor(e,t){super(e,y,void 0,h,t)}}class p extends d{constructor(e,t){super(e,y,void 0,"put",void 0,t)}}class v extends d{constructor(e){super(e,m,void 0,"getAll")}}class g extends d{constructor(e,t,s,r){super(e,y,void 0,c,void 0,void 0,t,s,r)}}class E extends d{constructor(e,t){super(e,y,void 0,c),this.newValues=t}}class x extends d{constructor(e){super(e,y,void 0,c),this.newAction=h}}class B{constructor(e,t,s,r){this._=e,this[Symbol.for("databaseName")]=t,r&&(this[Symbol.for("filter")]=r),s&&(this[Symbol.for("TableEntity")]=s)}get(e,t,s){let r,o=this[Symbol.for("ColumnEntity")];return!o&&IDBObjectStore.prototype.getAll&&void 0===e&&void 0===t&&void 0===s?r=new v(this._):(void 0!==o&&(e=[o.name]),e instanceof Array||(e=[e]),r=new g(this._,e,t,s)),this[Symbol.for("action")](r)}getDist(e,t,s){void 0===e||e instanceof Array||(e=[e]);let r=!1;return(e&&"string"==typeof colsmn||e instanceof Array&&1===e.length)&&(r=!0),this[Symbol.for("action")](new g(this._,e,t,s),r)}update(e){return this[Symbol.for("action")](new E(this._,e))}delete(){return this[Symbol.for("action")](new x(this._))}[Symbol.for("action")](e,t){return e.setFilter(this[Symbol.for("filter")]),new Promise(((s,r)=>{try{e.check(this[Symbol.for("TableEntity")])?this[Symbol.for("req")](e,t,s,r):r(e.error)}catch(e){r(e)}}))}[Symbol.for("req")](e,t,s,r){let o=e.objectStore(this[Symbol.for("TableEntity")].name),n=new Array,i=o[e.action](e.values);i.onsuccess=r=>{e.action===c?this[Symbol.for("cursor")](r,e,n,s,t):(n=r.target.result instanceof Array?n.concat(r.target.result):r.target.result,s(n))},i.onerror=e=>{r(e.target.error)}}[Symbol.for("cursor")](e,t,s,r,o){let n=e.target.result;if(t.start)n.advance(t.start),t.start=void 0;else if(n&&(!t.limit||s.length<t.limit)){let e={};if(t.columns?1===t.columns.length?n.value[t.columns[0]]&&(e=n.value[t.columns[0]]):t.columns.forEach((t=>{n.value[t]&&(e[t]=n.value[t])})):e=n.value,t.filter){let s=n.value[t.filter.index];if(s)switch(t.filter.type){case"endsWith":s.endsWith(t.filter.values)||(e=void 0);break;default:console.log(t.filter.type+" condition is not handled")}}if(e)if(t.newValues){let e=Object.assign(n.value,t.newValues),r=n.update(e);r.onsuccess=e=>{s.push(e.target.result)},r.onerror=e=>{reject(e.target.error)}}else if(t.newAction===h){let e=n.delete();e.onsuccess=e=>{s.push(e.target.result)},e.onerror=e=>{reject(e.target.error)}}else s.push(e);n.continue()}else t.newAction===h&&(s=s.arr.length),r(o?[...new Set(s)]:s)}}class D extends B{constructor(e,t,s,r){super(e,t,s),this[Symbol.for("ColumnEntity")]=r}equalDist(e){return this[Symbol.for("action")](ACTION.GET,ACCESS.READ_ONLY,e)}equal(e){return new B(this._,this[Symbol.for("databaseName")],this[Symbol.for("TableEntity")],new u(s,e,this[Symbol.for("ColumnEntity")]))}startsWith(e){return new B(this._,this[Symbol.for("databaseName")],this[Symbol.for("TableEntity")],new u(r,e,this[Symbol.for("ColumnEntity")]))}endsWith(e){return new B(this._,this[Symbol.for("databaseName")],this[Symbol.for("TableEntity")],new u("endsWith",e,this[Symbol.for("ColumnEntity")]))}}class k extends D{constructor(e,t,s,r){super(e,t,s,r)}greaterThan(e){return new B(this._,this[Symbol.for("databaseName")],this[Symbol.for("TableEntity")],new u(o,e,this[Symbol.for("ColumnEntity")]))}lesserThan(e){return new B(this._,this[Symbol.for("databaseName")],this[Symbol.for("TableEntity")],new u(i,e,this[Symbol.for("ColumnEntity")]))}greaterThanOrEqual(e){return new B(this._,this[Symbol.for("databaseName")],this[Symbol.for("TableEntity")],new u(n,e,this[Symbol.for("ColumnEntity")]))}lesserThanOrEqual(e){return new B(this._,this[Symbol.for("databaseName")],this[Symbol.for("TableEntity")],new u(a,e,this[Symbol.for("ColumnEntity")]))}between(e,t){return new B(this._,this[Symbol.for("databaseName")],this[Symbol.for("TableEntity")],new u(l,e+"~"+t,this[Symbol.for("ColumnEntity")]))}}class T{setter(e,t,s=!1,r="string"){typeof e===r?this[t]=e:s&&!e&&this.error(t,e)}error(e,t){throw new Error(this.constructor.name+" : "+e+" is "+t)}}class I extends T{constructor(e,t=!1,s=!1,r=!0,o="string"){super(),this.setter(e,"name"),this.unique=t,this.multiEntry=s,this.type=o,this.nullable=r}static fromJSON(e){return new I(e.name,e.unique,e.multiEntry,e.nullable,e.type)}}class _ extends B{constructor(e,t,s){super(e,t,s),this.sBulkAdd=Symbol.for("bulkAdd"),s.columns.forEach((e=>{let r;r="number"===e.type?new k(this._,t,s,e):new D(this._,t,s,e),this[e.name]=r}));let r=new I(s.keyPath,!0,!1,!1,s.type);"number"===s.type?this[s.keyPath]=new k(this._,t,s,r):this[s.keyPath]=new D(this._,t,s,r)}add(e){return e instanceof Array?new Promise(((t,s)=>{let r={index:0};r.values=e,this[this.sBulkAdd](r,t,s)})):this[Symbol.for("action")](new b(this._,e))}[Symbol.for("bulkAdd")](e,t,s){e.index<e.values.length?this[Symbol.for("action")](new b(this._,e.values[e.index])).then((r=>{e.index++,this[this.sBulkAdd](e,t,s)})).catch((t=>{s(t,e.values[e.index])})):t(e.index)}clear(){return this[Symbol.for("action")](new f(this._))}count(){return this[Symbol.for("action")](new w(this._))}delete(e){return this[Symbol.for("action")](new S(this._,e))}update(e,t){return t[this[Symbol.for("TableEntity")].keyPath]=e,this[Symbol.for("action")](new p(this._,t))}}class N{constructor(e,t){this._=e,this[Symbol.for("databaseName")]=t.databaseName,t.tables.forEach((s=>{this[s.name]=new _(e,t.databaseName,s)}))}delete(){return new Promise(((e,t)=>{this._.close();let s=DB[Symbol.for("IDBKeyRange")]().deleteDatabase(this[Symbol.for("databaseName")]);s.onsuccess=()=>{e("Database deleted Successfully")},s.onerror=e=>{t(e.target.error)}}))}}class A extends T{constructor(e,t,s,r=!0,o="string"){super(),this.autoIncrement=r,this.setter(e,"name",!0),this.setter(t,"keyPath",!0),this.type=o,this.setColumns=s}set setColumns(e){this.columns=[],"object"==typeof e&&e instanceof Array?e.forEach((e=>{e instanceof I||(e=I.fromJSON(e)),this.columns.push(e)})):void 0!==e&&this.error("columns",e)}static fromJSON(e){return new A(e.name,e.keyPath,e.columns,e.autoIncrement,e.type)}}class O extends T{constructor(e,t,s){super(),this.setter(e,"databaseName",!0),this.setter(t,"version",!0,"number"),this.setTables=s}set setTables(e){if(this.tables=[],"object"==typeof e&&e instanceof Array)e.forEach((e=>{e instanceof A||(e=A.fromJSON(e)),this.tables.push(e)}));else if(void 0!==e)throw new TypeError(e+" is of not of type [Object|Array]")}static fromJSON(e){return new O(e.databaseName,e.version,e.tables)}}class j{conifg(e){return new Promise(((t,s)=>{let r=P[Symbol.for("indexedDB")]().open(e.databaseName,e.version);r.onupgradeneeded=t=>{e.tables.forEach((e=>{this.createTable(t.target.result,e)})),t.target.result.onversionchange=e=>{e.target.result.close(),alert("A new version of this page is ready. Please reload!")}},r.onblocked=()=>{alert("Please close all other tabs with this site open!")},r.onsuccess=e=>{t(e.target.result)},r.onerror=e=>{s(e.target.error)}}))}createTable(e,t){e.objectStoreNames.contains(t.name)&&e.deleteObjectStore(t.name);let s=e.createObjectStore(t.name,{keyPath:t.keyPath,autoIncrement:t.autoIncrement});t.columns.forEach((e=>{s.createIndex(e.name,e.name,{unique:e.unique,multiEntry:e.multiEntry})}))}}class P{static[Symbol.for("indexedDB")](){return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB}static[Symbol.for("IDBTransaction")](){return window.IDBTransaction||window.webkitIDBTransaction||window.msIDBTransaction||{READ_WRITE:"readwrite"}}static[Symbol.for("IDBKeyRange")](){return window.IDBKeyRange||window.webkitIDBKeyRange||window.msIDBKeyRange}constructor(){this.xDB}static getInst(){return this.xDB||(this.xDB=new P),this.xDB}static setup(e){return e instanceof O||(e=O.fromJSON(e)),new Promise(((t,s)=>{(new j).conifg(e).then((s=>{this.getInst()[e.databaseName]=new N(s,e),t("Database Setup Successfully !")})).catch(s)}))}}const C={DB:P,DBEntity:O,TableEntity:A,ColumnEntity:I};return t.default})()}));